{"ast":null,"code":"var _jsxFileName = \"/home/patrick/Development/code/phase2/Bot_battlr/src/components/BotsContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport BotDetails from './BotDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsContainer({\n  enlistBot\n}) {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [isOverlayOpen, setIsOverlayOpen] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:3000/bots');\n      const data = await response.json();\n      setBots(data);\n    };\n    fetchData();\n  }, []);\n  const handleBotClick = bot => {\n    setSelectedBot(bot);\n    setIsOverlayOpen(true);\n  };\n  const handleDelete = botToRemove => {\n    setEnlistedBots(enlistedBots.filter(bot => bot !== botToRemove));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"botsContainer\",\n    children: [bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bots\",\n      onClick: () => handleBotClick(bot),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: bot.avatar_url,\n        alt: bot.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: bot.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: bot.catchphrase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: bot.health\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: bot.damage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: bot.armor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, bot.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)), isOverlayOpen && /*#__PURE__*/_jsxDEV(BotDetails, {\n      bot: selectedBot,\n      onClose: () => setIsOverlayOpen(false),\n      enlistBot: enlistBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsContainer, \"xQWouV6z3RMd8VpgEIsW6L0Uvf4=\");\n_c = BotsContainer;\nexport default BotsContainer;\nvar _c;\n$RefreshReg$(_c, \"BotsContainer\");","map":{"version":3,"names":["React","useState","useEffect","BotDetails","jsxDEV","_jsxDEV","BotsContainer","enlistBot","_s","bots","setBots","selectedBot","setSelectedBot","isOverlayOpen","setIsOverlayOpen","fetchData","response","fetch","data","json","handleBotClick","bot","handleDelete","botToRemove","setEnlistedBots","enlistedBots","filter","className","children","map","onClick","src","avatar_url","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","catchphrase","id","health","damage","armor","onClose","_c","$RefreshReg$"],"sources":["/home/patrick/Development/code/phase2/Bot_battlr/src/components/BotsContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport BotDetails from './BotDetails';\n\nfunction BotsContainer({ enlistBot }) {\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [isOverlayOpen, setIsOverlayOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:3000/bots');\n      const data = await response.json();\n      setBots(data);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleBotClick = (bot) => {\n    setSelectedBot(bot);\n    setIsOverlayOpen(true);\n  };\n  const handleDelete = (botToRemove) => {\n    setEnlistedBots(enlistedBots.filter((bot) => bot !== botToRemove));\n }\n  return (\n    <div className=\"botsContainer\">\n      {bots.map((bot) => (\n        <div key={bot.id} className=\"bots\" onClick={() => handleBotClick(bot)}>\n          <img src={bot.avatar_url} alt={bot.name} />\n          <h2>{bot.name}</h2>\n          <p>{bot.catchphrase}</p>\n          <div id=\"stats\">\n            <p>{bot.health}</p>\n            <p>{bot.damage}</p>\n            <p>{bot.armor}</p>\n          </div>\n        </div>\n      ))}\n      {isOverlayOpen && (\n        <BotDetails bot={selectedBot} onClose={() => setIsOverlayOpen(false)} enlistBot={enlistBot} />\n      )}\n    </div>\n  );\n}\n\nexport default BotsContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}